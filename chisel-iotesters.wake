
def reportScalaTest report job =
  def printReport paths =
    def reports = paths | filter (_.getPathName ==~ report)
    match reports
      report, Nil =
        def res = read report
        def _ = rmap println res
        Pass "Success!"
      # Nil suggests that ScalaTest didn't run
      Nil = match paths
        bad, Nil if bad.getPathError.isSome =
          match bad.getPathError
            Some err = Fail err
            None     = job.getJobStderr
        x = Fail "Something has gone horribly wrong".makeError
      x           = Fail "Ran Scala Test expected exactly 1 report, got {format x}".makeError

  match job.getJobOutputs
    Nil = job.getJobStderr
    output, Nil if output.getPathError.isSome =
      printReport job.getJobFailedOutputs
      | rmapPass (\_ Fail "ScalaTest {report} failed!".makeError)
    one, Nil = panic "bad"
    outputs = printReport outputs

global def runScalaTest module tester =
  def report = "test.report.txt"
  runJava module.scalaModuleClasspath "org.scalatest.tools.Runner" ("-f", report, "-s", tester, "-Drom=bar", Nil) Nil
  | reportScalaTest report
